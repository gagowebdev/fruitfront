import { useEffect, useState } from "react";
import api from "../api/axiosInstance"; // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—â–∏–π `axiosInstance`
import { toast } from "react-toastify";

function WalletPage() {
  const [balance, setBalance] = useState<number>(0);
  const [transactions, setTransactions] = useState<any[]>([]);
  const [showDepositForm, setShowDepositForm] = useState(false);
  const [showWithdrawForm, setShowWithdrawForm] = useState(false);
  const [amount, setAmount] = useState<number>(0);
  const [cardNumber, setCardNumber] = useState<string>("");
  const [activeDeposit, setActiveDeposit] = useState<number | null>(null);

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  useEffect(() => {
    api.get("/users/me")
      .then((response) => setBalance(response.data.balance))
      .catch(() => toast.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞"));

    const savedDeposit = localStorage.getItem("activeDeposit");
    if (savedDeposit) {
      setActiveDeposit(Number(savedDeposit));
    }
  }, []);


  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  useEffect(() => {
    api.get("/transactions/history")
      .then((response) => {
        if (Array.isArray(response.data)) {
          setTransactions(response.data);
        } else {
          setTransactions([]);
        }
      })
      .catch(() => toast.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π"));
  }, []);

  function formatDateToLocal(dateString: string) {
    if (!dateString) return "‚è≥";
  
    // üî• –†–∞–∑–±–∏—Ä–∞–µ–º "15-02-2025 13:16" -> [15, 02, 2025, 13, 16]
    const parts = dateString.match(/(\d{2})-(\d{2})-(\d{4}) (\d{2}):(\d{2})/);
    if (!parts) return "‚ùå –û—à–∏–±–∫–∞ –¥–∞—Ç—ã";
  
    const day = parts[1];
    const month = parts[2];
    const year = parts[3];
    const hours = parts[4];
    const minutes = parts[5];
  
    // üìÖ –°–æ–∑–¥–∞—ë–º ISO-–¥–∞—Ç—É (YYYY-MM-DDTHH:mm)
    const isoDate = `${year}-${month}-${day}T${hours}:${minutes}:00Z`;
  
    // üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
    const date = new Date(isoDate);
    return date.toLocaleString("ru-RU", {
      day: "2-digit",
      month: "2-digit",
      year: "numeric",
      hour: "2-digit",
      minute: "2-digit",
    });
  }

  const handleDeposit = () => {
    if (!amount || amount <= 0) {
      return toast.error("–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è");
    }

    api.post("/transactions/deposit", { amount, method: "tonkeeper" })
    .then((response) => {
      const { id, link, status } = response.data;

      if (!id) {
        return toast.error("–û—à–∏–±–∫–∞: –Ω–µ—Ç ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏");
      }

      toast.success("–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –≤ TonKeeper...");
      window.open(link, "_blank");
      setShowDepositForm(false);
      setAmount(0);

      if (status === "created") {
        localStorage.setItem("activeDeposit", String(id));
        setActiveDeposit(id);
      }
    })
    .catch((error) => {
      if (error.response?.data?.message === "–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç. –ó–∞–≤–µ—Ä—à–∏—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –Ω–æ–≤–æ–≥–æ.") {
        toast.error("–í—ã —É–∂–µ –Ω–∞—á–∞–ª–∏ –¥–µ–ø–æ–∑–∏—Ç. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–ª–∏ –æ—Ç–º–µ–Ω–∏—Ç–µ –µ–≥–æ!");
      } else {
        toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏");
      }
    });

  };

  const handleWithdraw = () => {
    if (!amount || amount < 100) {
      return toast.error("–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –≤—ã–≤–æ–¥–∞ ‚Äî 100 AMD");
    }
    if (!cardNumber.trim()) {
      return toast.error("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã");
    }
    if (balance < amount) {
      return toast.error("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤");
    }
  
    api.post("/transactions/withdraw", { amount, recipient: cardNumber })
      .then(() => {
        toast.success("–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω");
        setShowWithdrawForm(false);
        setAmount(0);
        setCardNumber("");
      })
      .catch((error) => {
        toast.error(error.response?.data?.message || "–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–≤–æ–¥–µ");
      });
  };
  
  
  

  return (
    <div className="wallet">
      <h2>–ö–æ—à–µ–ª–µ–∫</h2>

      <div className="wallet-balance">
        <h3>–ë–∞–ª–∞–Ω—Å: {balance} AMD</h3>
      </div>

      <div className="wallet-actions">
        <button 
          onClick={() => setShowDepositForm(true)} 
          disabled={activeDeposit !== null}
        >
          –ü–æ–ø–æ–ª–Ω–∏—Ç—å
        </button>
        <button onClick={() => setShowWithdrawForm(true)} disabled={balance < 100}>
        –í—ã–≤–µ—Å—Ç–∏
      </button>
      </div>


      {showDepositForm && (
        <div className="modal">
          <h3>–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ</h3>
          <input
            type="number"
            value={amount}
            onChange={(e) => setAmount(Number(e.target.value))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
          />
          <button onClick={handleDeposit}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          <button onClick={() => setShowDepositForm(false)}>–û—Ç–º–µ–Ω–∞</button>
        </div>
      )}

      {showWithdrawForm && (
        <div className="modal">
          <h3>–í—ã–≤–æ–¥</h3>
          <input
            type="number"
            value={amount}
            onChange={(e) => setAmount(Number(e.target.value))}
            placeholder="–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É"
          />
          <input
            type="text"
            value={cardNumber}
            onChange={(e) => setCardNumber(e.target.value)}
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã"
          />
          <button onClick={handleWithdraw}>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</button>
          <button onClick={() => {
            setAmount(0);
            setCardNumber("");
            setShowWithdrawForm(false);
          }}>
            –û—Ç–º–µ–Ω–∞
          </button>
        </div>
      )}

      {activeDeposit && (
        <div className="deposit-status">
          <p>–í—ã –Ω–∞—á–∞–ª–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –æ–ø–ª–∞—Ç—É:</p>
          <button onClick={() => {
            api.patch(`/admin/transactions/${activeDeposit}/confirm`)
              .then(() => {
                toast.success("–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É");
                localStorage.removeItem("activeDeposit");
                setActiveDeposit(null);
              })
              .catch(() => toast.error("–û—à–∏–±–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"));
          }}>–Ø –æ–ø–ª–∞—Ç–∏–ª</button>

          <button onClick={() => {
            api.delete(`/transactions/${activeDeposit}/cancel`)
              .then(() => {
                toast.info("–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ");
                localStorage.removeItem("activeDeposit");
                setActiveDeposit(null);
              })
              .catch(() => toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ"));
          }}>–û—Ç–º–µ–Ω–∞</button>
        </div>
      )}

      <div className="wallet-history">
        <h3>–ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π</h3>
        {transactions.length > 0 ? (
          <table>
            <thead>
              <tr>
                <th>–°—É–º–º–∞</th>
                <th>–¢–∏–ø</th>
                <th>–î–∞—Ç–∞</th>
                <th>–°—Ç–∞—Ç—É—Å</th>
              </tr>
            </thead>
            <tbody>
              {transactions.map((tx) => (
                <tr key={tx.id}>
                  <td>{tx.amount} AMD</td>
                  <td>{tx.type === "deposit" ? "–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ" : "–í—ã–≤–æ–¥"}</td>
                  <td>{formatDateToLocal(tx.created_at)}</td>
                  <td>{tx.status}</td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <p>–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ–∫–∞ –Ω–µ—Ç</p>
        )}
      </div>
    </div>
  );
}

export default WalletPage;
